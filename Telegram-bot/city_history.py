import telebot
import telebot.types as types
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–∞—Ö –∏—Å—Ç–æ—Ä–∏–∏
HISTORY_TOPICS = {
    "gerb": {
        "title": "üêª –ì–µ—Ä–± –Ø—Ä–æ—Å–ª–∞–≤–ª—è",
        "text": (
            "üêª <b>–ì–µ—Ä–± –Ø—Ä–æ—Å–ª–∞–≤–ª—è</b>\n\n"
            "–ù–∞ –≥–µ—Ä–±–µ –Ø—Ä–æ—Å–ª–∞–≤–ª—è ‚Äî –º–µ–¥–≤–µ–¥—å —Å –∑–æ–ª–æ—Ç–æ–π —Å–µ–∫–∏—Ä–æ–π.\n"
            "–ú–µ–¥–≤–µ–¥—å ‚Äî —Å–∏–º–≤–æ–ª —Å–∏–ª—ã, –º—É–∂–µ—Å—Ç–≤–∞ –∏ –º—É–¥—Ä–æ—Å—Ç–∏,\n"
            "–∞ —Å–µ–∫–∏—Ä–∞ ‚Äî –≤–ª–∞—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã –≥–æ—Ä–æ–¥–∞.\n\n"
            "‚öî –õ–µ–≥–µ–Ω–¥–∞ –≥–ª–∞—Å–∏—Ç, —á—Ç–æ –∫–Ω—è–∑—å –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π –ø–æ–±–µ–¥–∏–ª –º–µ–¥–≤–µ–¥—è\n"
            "–Ω–∞ –º–µ—Å—Ç–µ –æ—Å–Ω–æ–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞.\n"
            "–°–µ–≥–æ–¥–Ω—è –≥–µ—Ä–± ‚Äî –≥–æ—Ä–¥–æ—Å—Ç—å —è—Ä–æ—Å–ª–∞–≤—Ü–µ–≤ –∏ —É–∑–Ω–∞–≤–∞–µ–º—ã–π —Å–∏–º–≤–æ–ª –Ω–∞\n"
            "—Ñ–ª–∞–≥–µ, –∑–¥–∞–Ω–∏—è—Ö –∏ —Å—É–≤–µ–Ω–∏—Ä–∞—Ö!"
        )
    },
    "architecture": {
        "title": "üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è",
        "text": (
            "üèõ <b>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è</b> üèõ\n\n"
            "–Ø—Ä–æ—Å–ª–∞–≤–ª—å ‚Äî –º—É–∑–µ–π –ø–æ–¥ –æ—Ç–∫—Ä—ã—Ç—ã–º –Ω–µ–±–æ–º!\n"
            "–ó–¥–µ—Å—å —Å–æ—á–µ—Ç–∞—é—Ç—Å—è –¥—Ä–µ–≤–Ω–µ—Ä—É—Å—Å–∫–æ–µ –∑–æ–¥—á–µ—Å—Ç–≤–æ, –±–∞—Ä–æ–∫–∫–æ –∏ –∫–ª–∞—Å—Å–∏—Ü–∏–∑–º.\n\n"
            "‚ú® <b>–ì–ª–∞–≤–Ω—ã–µ –∂–µ–º—á—É–∂–∏–Ω—ã:</b>\n"
            "‚Ä¢ –°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å ‚Äî —Å–µ—Ä–¥—Ü–µ –≥–æ—Ä–æ–¥–∞\n"
            "‚Ä¢ –¶–µ—Ä–∫–æ–≤—å –ò–ª—å–∏ –ü—Ä–æ—Ä–æ–∫–∞ ‚Äî —à–µ–¥–µ–≤—Ä —Å —Ñ—Ä–µ—Å–∫–∞–º–∏\n"
            "‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫—É–ø–æ–ª–∞, –±–µ–ª–æ–∫–∞–º–µ–Ω–Ω—ã–µ —Ñ–∞—Å–∞–¥—ã –∏ —Ä–µ–∑–Ω—ã–µ –Ω–∞–ª–∏—á–Ω–∏–∫–∏\n\n"
            "üèÜ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –Ø—Ä–æ—Å–ª–∞–≤–ª—è ‚Äî –æ–±—ä–µ–∫—Ç –Æ–ù–ï–°–ö–û –∏ –≥–æ—Ä–¥–æ—Å—Ç—å –†–æ—Å—Å–∏–∏!"
        )
    },
    "yaroslav": {
        "title": "üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π",
        "text": (
            "üëë <b>–Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π</b> üëë\n\n"
            "–Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π ‚Äî –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ä–æ–¥–∞, –≤–µ–ª–∏–∫–∏–π –∫–Ω—è–∑—å –ö–∏–µ–≤—Å–∫–∏–π.\n"
            "–í 1010 –≥–æ–¥—É –æ–Ω –∑–∞–ª–æ–∂–∏–ª –Ø—Ä–æ—Å–ª–∞–≤–ª—å –Ω–∞ –º–µ—Å—Ç–µ –ø–æ–±–µ–¥—ã –Ω–∞–¥ –º–µ–¥–≤–µ–¥–µ–º.\n\n"
            "üåü <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞–ª –ø–µ—Ä–≤—ã–π —Å–≤–æ–¥ –∑–∞–∫–æ–Ω–æ–≤ ‚Äî '–†—É—Å—Å–∫–∞—è –ü—Ä–∞–≤–¥–∞'\n"
            "‚Ä¢ –†–∞–∑–≤–∏–≤–∞–ª –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –∫—É–ª—å—Ç—É—Ä—É –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–≤—è–∑–∏\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–∞–ª –≥–æ—Ä–æ–¥–∞, —Å—Ç—Ä–æ–∏–ª —Ö—Ä–∞–º—ã, —É–∫—Ä–µ–ø–ª—è–ª –†—É—Å—å\n\n"
            "üèÖ –ï–≥–æ –∏–º—è ‚Äî —Å–∏–º–≤–æ–ª –º—É–¥—Ä–æ—Å—Ç–∏, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ —Å–∏–ª—ã!"
        )
    }
}

def get_history_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–µ–º–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏."""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.row(
        types.InlineKeyboardButton("üêª –ì–µ—Ä–±", callback_data="history_gerb"),
        types.InlineKeyboardButton("üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", callback_data="history_architecture")
    )
    keyboard.row(
        types.InlineKeyboardButton("üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π", callback_data="history_yaroslav")
    )
    keyboard.row(
        types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_about")
    )
    return keyboard

def send_history_topic(bot, message, topic):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ –∏—Å—Ç–æ—Ä–∏–∏ (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)."""
    try:
        if topic not in HISTORY_TOPICS:
            return None
        topic_info = HISTORY_TOPICS[topic]
        bot.send_message(
            message.chat.id,
            topic_info['text'],
            parse_mode='HTML'
        )
        return topic_info
    except Exception as e:
        logger.error(f"Error in send_history_topic: {e}")
        return None 