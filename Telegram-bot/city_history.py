import telebot
import telebot.types as types
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–∞—Ö –∏—Å—Ç–æ—Ä–∏–∏
HISTORY_TOPICS = {
    "traditions": {
        "title": "üé™ –¢—Ä–∞–¥–∏—Ü–∏–∏ –Ø—Ä–æ—Å–ª–∞–≤–ª—è",
        "text": (
            "<b>–¢—Ä–∞–¥–∏—Ü–∏–∏ –Ø—Ä–æ—Å–ª–∞–≤–ª—è</b>\n\n"
            "–Ø—Ä–æ—Å–ª–∞–≤–ª—å —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ –±–æ–≥–∞—Ç—ã–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤–µ–∫–æ–≤:\n\n"
            "üé≠ <b>–¢–µ–∞—Ç—Ä–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏</b>\n"
            "‚Ä¢ –ü–µ—Ä–≤—ã–π —Ä—É—Å—Å–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∞—Ç—Ä\n"
            "‚Ä¢ –§–µ—Å—Ç–∏–≤–∞–ª—å –∏—Å–∫—É—Å—Å—Ç–≤ ¬´–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ¬ª\n"
            "‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ—Å—Ç–∏–≤–∞–ª—å\n\n"
            "üé® <b>–†–µ–º–µ—Å–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏</b>\n"
            "‚Ä¢ –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –º–∞–π–æ–ª–∏–∫–∞\n"
            "‚Ä¢ –•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–≤–∫–∞\n"
            "‚Ä¢ –†–µ–∑—å–±–∞ –ø–æ –¥–µ—Ä–µ–≤—É\n\n"
            "üé™ <b>–ù–∞—Ä–æ–¥–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏</b>\n"
            "‚Ä¢ –ú–∞—Å–ª–µ–Ω–∏—á–Ω—ã–µ –≥—É–ª—è–Ω–∏—è\n"
            "‚Ä¢ –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è —è—Ä–º–∞—Ä–∫–∞\n"
            "‚Ä¢ –ü—Ä–∞–∑–¥–Ω–∏–∫ –î–Ω—è –≥–æ—Ä–æ–¥–∞"
        ),
        "image": "Materials/history/traditions.jpg"
    },
    "architecture": {
        "title": "üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è",
        "text": (
            "<b>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è</b>\n\n"
            "–Ø—Ä–æ—Å–ª–∞–≤–ª—å - –∂–µ–º—á—É–∂–∏–Ω–∞ –ó–æ–ª–æ—Ç–æ–≥–æ –∫–æ–ª—å—Ü–∞ –†–æ—Å—Å–∏–∏, –∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–≤–æ–µ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π:\n\n"
            "üè∞ <b>–¶–µ—Ä–∫–æ–≤–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</b>\n"
            "‚Ä¢ –¶–µ—Ä–∫–æ–≤—å –ò–ª—å–∏ –ü—Ä–æ—Ä–æ–∫–∞\n"
            "‚Ä¢ –°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π —Å–æ–±–æ—Ä\n"
            "‚Ä¢ –¶–µ—Ä–∫–æ–≤—å –ò–æ–∞–Ω–Ω–∞ –ü—Ä–µ–¥—Ç–µ—á–∏\n\n"
            "üèõ <b>–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</b>\n"
            "‚Ä¢ –ì—É–±–µ—Ä–Ω–∞—Ç–æ—Ä—Å–∫–∏–π –¥–æ–º\n"
            "‚Ä¢ –î–µ–º–∏–¥–æ–≤—Å–∫–∏–π –ª–∏—Ü–µ–π\n"
            "‚Ä¢ –î–æ–º –ë–æ–ª–∫–æ–Ω—Å–∫–æ–≥–æ\n\n"
            "üèó <b>–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</b>\n"
            "‚Ä¢ –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π –≤–æ–∫–∑–∞–ª\n"
            "‚Ä¢ –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–π –∑–∞–ª\n"
            "‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã"
        ),
        "image": "Materials/history/architecture.jpg"
    },
    "yaroslav": {
        "title": "üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π",
        "text": (
            "<b>–Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π - –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ä–æ–¥–∞</b>\n\n"
            "–Ø—Ä–æ—Å–ª–∞–≤ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á –ú—É–¥—Ä—ã–π (978-1054) - –≤–µ–ª–∏–∫–∏–π –∫–Ω—è–∑—å –∫–∏–µ–≤—Å–∫–∏–π, –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –Ø—Ä–æ—Å–ª–∞–≤–ª—è:\n\n"
            "üëë <b>–ò—Å—Ç–æ—Ä–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∏—è</b>\n"
            "‚Ä¢ 1010 –≥–æ–¥ - –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞\n"
            "‚Ä¢ –õ–µ–≥–µ–Ω–¥–∞ –æ –º–µ–¥–≤–µ–¥–µ\n"
            "‚Ä¢ –ü–µ—Ä–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å\n\n"
            "üìö <b>–ü—Ä–∞–≤–ª–µ–Ω–∏–µ</b>\n"
            "‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü\n"
            "‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –∫—É–ª—å—Ç—É—Ä—ã\n"
            "‚Ä¢ –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ö—Ä–∞–º–æ–≤\n\n"
            "üèÜ <b>–ù–∞—Å–ª–µ–¥–∏–µ</b>\n"
            "‚Ä¢ –ü–µ—Ä–≤—ã–π —Ä—É—Å—Å–∫–∏–π —Å–≤–æ–¥ –∑–∞–∫–æ–Ω–æ–≤\n"
            "‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n"
            "‚Ä¢ –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–≤—è–∑–∏"
        ),
        "image": "Materials/history/yaroslav.jpg"
    },
    "kremlin": {
        "title": "üè∞ –Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π –ö—Ä–µ–º–ª—å",
        "text": (
            "<b>–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∏–π –ö—Ä–µ–º–ª—å</b>\n\n"
            "–°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π –º–æ–Ω–∞—Å—Ç—ã—Ä—å - –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –Ø—Ä–æ—Å–ª–∞–≤–ª—è:\n\n"
            "üèõ <b>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</b>\n"
            "‚Ä¢ –°–ø–∞—Å–æ-–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∏–π —Å–æ–±–æ—Ä\n"
            "‚Ä¢ –°–≤—è—Ç—ã–µ –≤–æ—Ä–æ—Ç–∞\n"
            "‚Ä¢ –ó–≤–æ–Ω–Ω–∏—Ü–∞\n\n"
            "üìö <b>–ò—Å—Ç–æ—Ä–∏—è</b>\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–∞–Ω–∏–µ –≤ XII –≤–µ–∫–µ\n"
            "‚Ä¢ –û–±–æ—Ä–æ–Ω–∞ –æ—Ç –ø–æ–ª—è–∫–æ–≤\n"
            "‚Ä¢ –†–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏—è\n\n"
            "üé≠ <b>–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å</b>\n"
            "‚Ä¢ –ú—É–∑–µ–π-–∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫\n"
            "‚Ä¢ –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n"
            "‚Ä¢ –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä"
        ),
        "image": "Materials/history/kremlin.jpg"
    }
}

def get_history_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–µ–º–∞–º–∏ –∏—Å—Ç–æ—Ä–∏–∏."""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.row(
        types.InlineKeyboardButton("üé™ –¢—Ä–∞–¥–∏—Ü–∏–∏", callback_data="history_traditions"),
        types.InlineKeyboardButton("üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", callback_data="history_architecture")
    )
    keyboard.row(
        types.InlineKeyboardButton("üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π", callback_data="history_yaroslav"),
        types.InlineKeyboardButton("üè∞ –ö—Ä–µ–º–ª—å", callback_data="history_kremlin")
    )
    keyboard.row(
        types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_about")
    )
    return keyboard

def send_history_topic(bot, message, topic):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ –∏—Å—Ç–æ—Ä–∏–∏."""
    try:
        if topic not in HISTORY_TOPICS:
            return None
        
        topic_info = HISTORY_TOPICS[topic]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_path = topic_info.get('image')
        if image_path and os.path.exists(image_path):
            try:
                with open(image_path, 'rb') as photo:
                    bot.send_photo(
                        message.chat.id,
                        photo,
                        caption=topic_info['text'],
                        parse_mode='HTML'
                    )
            except Exception as photo_error:
                logger.error(f"Error sending history photo: {photo_error}")
                bot.send_message(
                    message.chat.id,
                    topic_info['text'],
                    parse_mode='HTML'
                )
        else:
            bot.send_message(
                message.chat.id,
                topic_info['text'],
                parse_mode='HTML'
            )
        
        return topic_info
        
    except Exception as e:
        logger.error(f"Error in send_history_topic: {e}")
        return None 