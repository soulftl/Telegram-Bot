import telebot
import telebot.types as types
from datetime import datetime, timedelta
import logging
import os
import matplotlib.pyplot as plt
from io import BytesIO
import time
from database import add_user, update_last_active
from bot_instance import bot

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–æ–º –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
last_question_message_ids = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π/—Å–æ–±—ã—Ç–∏–π
# last_category_message_id = {} # –£–î–ê–õ–Ø–ï–ú –≠–¢–£ –°–¢–†–û–ö–£

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

from config import BOT_TOKEN, LOCATIONS
from news import get_yarnews_articles, get_news_by_category, get_news_by_date, get_news_by_week
from weather import get_openmeteo_weather, format_weather_message, get_weather_description, generate_hourly_temperature_graph_image
from events import get_events_by_category, format_event_message, event_types
from locations import get_locations_by_category, get_location_info
from about_city import (
    YAROSLAVL_INFO, get_location_info,
    get_locations_by_category, get_distance_to_center,
    create_location_keyboard
)
from city_history import get_history_keyboard, send_history_topic, HISTORY_TOPICS
from keyboards import create_main_keyboard, get_about_keyboard, create_weather_keyboard, create_history_keyboard # Import create_main_keyboard from keyboards.py

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
# bot = telebot.TeleBot(BOT_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ
CATEGORY_MAPPING = {
    "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è": "administration",
    "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç": "transport",
    "–†–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ": "construction",
    "–ü–æ–ª–∏—Ç–∏–∫–∞": "politics",
    "–ü–æ–≥–æ–¥–∞": "weather"
}

# Global mapping for map category buttons to internal keys
CATEGORY_MAP_BUTTONS_TO_KEYS = {
    "üè∞ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä": "attractions",
    "üè• –¢—Ä–∞–≤–º–ø—É–Ω–∫—Ç—ã": "trauma_centers",
    "üå≥ –ü–∞—Ä–∫–∏": "parks",
    "üé≠ –¢–µ–∞—Ç—Ä—ã": "theaters",
    "üõçÔ∏è –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã": "shopping_centers"
}
REVERSE_CATEGORY_MAP_BUTTONS_TO_KEYS = {v: k for k, v in CATEGORY_MAP_BUTTONS_TO_KEYS.items()}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π
CATEGORY_NAMES = {
    "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è": {
        "by": "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏",
        "default": "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"
    },
    "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç": {
        "by": "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞",
        "default": "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
    },
    "–†–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ": {
        "by": "—Ä–µ–º–æ–Ω—Ç–∞ –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞",
        "default": "—Ä–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"
    },
    "–ü–æ–ª–∏—Ç–∏–∫–∞": {
        "by": "–ø–æ–ª–∏—Ç–∏–∫–∏",
        "default": "–ø–æ–ª–∏—Ç–∏–∫–∞"
    },
    "–ü–æ–≥–æ–¥–∞": {
        "by": "–ø–æ–≥–æ–¥—ã",
        "default": "–ø–æ–≥–æ–¥–∞"
    }
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ
EVENT_CATEGORY_MAPPING = {
    "–ö—É–ª—å—Ç—É—Ä–∞": "culture",
    "–°–ø–æ—Ä—Ç": "sport",
    "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": "education",
    "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": "entertainment",
    "–í—ã—Å—Ç–∞–≤–∫–∏": "exhibitions",
    "–ö–æ–Ω—Ü–µ—Ä—Ç—ã": "concerts"
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–±—ã—Ç–∏–π
EVENT_CATEGORY_NAMES = {
    "–ö—É–ª—å—Ç—É—Ä–∞": {
        "by": "–∫—É–ª—å—Ç—É—Ä—ã",
        "default": "–∫—É–ª—å—Ç—É—Ä–∞"
    },
    "–°–ø–æ—Ä—Ç": {
        "by": "—Å–ø–æ—Ä—Ç–∞",
        "default": "—Å–ø–æ—Ä—Ç"
    },
    "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": {
        "by": "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
        "default": "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
    },
    "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": {
        "by": "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π",
        "default": "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
    },
    "–í—ã—Å—Ç–∞–≤–∫–∏": {
        "by": "–≤—ã—Å—Ç–∞–≤–æ–∫",
        "default": "–≤—ã—Å—Ç–∞–≤–∫–∏"
    },
    "–ö–æ–Ω—Ü–µ—Ä—Ç—ã": {
        "by": "–∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤",
        "default": "–∫–æ–Ω—Ü–µ—Ä—Ç—ã"
    }
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# –¢–µ–∫—Å—Ç –ø–æ–º–æ—â–∏
HELP_TEXT = (
    "‚öôÔ∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—à –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n"
    "‚û°Ô∏è @NovostYARHelpBot ‚¨ÖÔ∏è\n\n"
    "–í –±–æ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
    "üìÑ –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ\n"
    "üìã –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è\n"
    "üí¨ –û–±—â–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏\n\n"
    "–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ! üöÄ"
)

def save_user_state(user_id, state):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é
    """
    try:
        user_states[user_id] = state
        logger.debug(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {state}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

def get_user_state(user_id):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–∫—É—â–µ–º —Ä–∞–∑–¥–µ–ª–µ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –º–µ–Ω—é
    """
    try:
        return user_states.get(user_id)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        return None

def clear_user_state(user_id):
    """
    –û—á–∏—â–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–¥–µ–ª–æ–º
    """
    try:
        if user_id in user_states:
            del user_states[user_id]
            logger.debug(f"–û—á–∏—â–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

# create_main_keyboard function will be imported from keyboards.py

def create_about_city_keyboard():
    """DEPRECATED: Use get_about_keyboard for inline buttons."""
    pass # This function is no longer needed or will be adapted later if necessary

def setup_handlers(bot):
    @bot.message_handler(commands=['start'])
    def handle_start(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ—Ç–æ–º.
        –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
        1. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        2. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        3. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞
        """
        try:
            user_id = message.chat.id
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–∑ Telegram
            add_user(
                user_id,
                username=message.from_user.username,
                first_name=message.from_user.first_name,
                last_name=message.from_user.last_name
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞
            bot.send_message(
                message.chat.id,
                f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –Ø—Ä–æ—Å–ª–∞–≤–ª—è, {message.from_user.first_name}!\n\n"
                "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –≥–æ—Ä–æ–¥–∞, –ø–æ–≥–æ–¥–µ, —Å–æ–±—ã—Ç–∏—è—Ö –∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö.",
                reply_markup=create_main_keyboard()
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            clear_user_state(user_id)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_start: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    @bot.message_handler(commands=['help'])
    def handle_help_command(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        """
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π
            with open('Materials/helpPhoto.jpg', 'rb') as photo:
                bot.send_photo(
                    message.chat.id,
                    photo,
                    caption=HELP_TEXT,
                    parse_mode='HTML',
                    reply_markup=create_main_keyboard()
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã /help: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(func=lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
    def handle_back_button(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
        """
        try:
            user_id = message.chat.id
            user_state = get_user_state(user_id)
            logger.debug(f"handle_back_button: user_state for {user_id}: {user_state}")

            if not user_state:
                bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=create_main_keyboard())
                clear_user_state(user_id)
                logger.debug(f"handle_back_button: No user_state, returning to main menu for {user_id}")
                return

            current_state = user_state.get('state')
            prev_menu = user_state.get('prev_menu')
            logger.debug(f"handle_back_button: current_state={current_state}, prev_menu={prev_menu} for {user_id}")
            
            if current_state == 'location_info': # –ò–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Å—Ç–µ
                category_key = user_state.get('category')
                if category_key:
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–∞—Ä—Ç—ã
                    show_map(message, initial_load=False)
                    logger.debug(f"handle_back_button: Returning to map for {user_id}")
                else:
                    logger.error(f"Category key not found in state for user {user_id} when in location_info.")
                    show_map(message, initial_load=False) # Fallback
                    logger.debug(f"handle_back_button: Fallback to map for {user_id}")
            
            elif current_state == 'category_places': # –ò–∑ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Å—Ç
                show_map(message, initial_load=False)
                logger.debug(f"handle_back_button: Returning to category places for {user_id}")

            elif current_state == 'map_options': # –ò–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –∫–∞—Ä—Ç—ã (—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏)
                handle_about_city(message)
                logger.debug(f"handle_back_button: Returning to about city from map options for {user_id}")
            
            elif current_state == 'about_city_menu': # –ò–∑ –º–µ–Ω—é "–û –≥–æ—Ä–æ–¥–µ"
                bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=create_main_keyboard())
                clear_user_state(user_id)
                logger.debug(f"handle_back_button: Returning to main menu from about city for {user_id}")
            
            elif current_state == 'history_menu': # –ò–∑ –º–µ–Ω—é –∏—Å—Ç–æ—Ä–∏–∏
                if prev_menu == 'about_city_menu':
                    handle_about_city(message)
                    logger.debug(f"handle_back_button: Returning to about city from history for {user_id}")
                else:
                    bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=create_main_keyboard())
                    clear_user_state(user_id)
                    logger.debug(f"handle_back_button: Returning to main menu from history (no prev_menu) for {user_id}")

            else:
                # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∏–ª–∏ 'idle', –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                bot.send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=create_main_keyboard())
                clear_user_state(user_id)
                logger.debug(f"handle_back_button: Unknown state ({current_state}), returning to main menu for {user_id}")

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥': {e}")
            bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ. –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=create_main_keyboard())
            clear_user_state(user_id) # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            logger.error(f"handle_back_button: Exception occurred, returning to main menu for {user_id}")

    @bot.message_handler(func=lambda message: message.text == "üó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è")
    def show_map(message, initial_load=True):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –∫–∞—Ä—Ç—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –º–µ—Å—Ç
        –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
        """
        logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –≤—ã–±—Ä–∞–ª '–ö–∞—Ä—Ç–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è'")
        try:
            if initial_load:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —Ü–µ–Ω—Ç—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è
                bot.send_location(
                    chat_id=message.chat.id,
                    latitude=57.626559,
                    longitude=39.893813
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                bot.send_message(
                    chat_id=message.chat.id,
                    text="üìç –¶–µ–Ω—Ç—Ä –Ø—Ä–æ—Å–ª–∞–≤–ª—è"
                )

            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton("üè∞ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä"))
            markup.row(types.KeyboardButton("üè• –¢—Ä–∞–≤–º–ø—É–Ω–∫—Ç—ã"), types.KeyboardButton("üå≥ –ü–∞—Ä–∫–∏"))
            markup.row(types.KeyboardButton("üé≠ –¢–µ–∞—Ç—Ä—ã"), types.KeyboardButton("üõçÔ∏è –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã"))
            markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥")) # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –º–µ–Ω—é "–û –≥–æ—Ä–æ–¥–µ"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            bot.send_message(
                chat_id=message.chat.id,
                text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Å—Ç:",
                reply_markup=markup
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∫ map_options
            save_user_state(message.chat.id, {'menu': 'map_options', 'state': 'map', 'prev_menu': 'about_city_menu'})
            logger.debug(f"Map menu displayed for user {message.chat.id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–∞—Ä—Ç—ã: {e}")
            bot.send_message(
                message.chat.id,
                text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(
        func=lambda message: message.text in CATEGORY_MAP_BUTTONS_TO_KEYS.keys())
    def show_category_menu(message, category_key=None, send_category_info=True):
        """Shows category menu for places."""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if category_key is None:
            category_key = CATEGORY_MAP_BUTTONS_TO_KEYS[message.text]
            current_button_text = message.text # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è display_name
        else:
            current_button_text = REVERSE_CATEGORY_MAP_BUTTONS_TO_KEYS.get(category_key)
            if current_button_text is None:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª—é—á–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {category_key}")
                return # –ò–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É

        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ LOCATIONS
        category_info = LOCATIONS.get(category_key, {})
        category_title = category_info.get('category_title')
        category_description = category_info.get('category_description')

        # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ñ–ª–∞–≥ send_category_info —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
        if send_category_info and category_title and category_description:
            bot.send_message(
                chat_id=message.chat.id,
                text=f"{category_title}\n\n{category_description}",
                parse_mode='HTML'
            )
        
        # Get all places for the category, excluding metadata keys
        places = [key for key in LOCATIONS[category_key].keys() if key not in ['category_title', 'category_description']]
        
        # Create keyboard with places, using row_width=2 for better layout
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        
        # Add places in pairs
        for i in range(0, len(places), 2):
            row = [types.KeyboardButton(places[i])]
            if i + 1 < len(places):
                row.append(types.KeyboardButton(places[i + 1]))
            markup.row(*row)
        
        # Add back button
        markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        
        # Get proper display name for the category
        display_name = {
            "üè∞ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä": "–¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
            "üè• –¢—Ä–∞–≤–º–ø—É–Ω–∫—Ç—ã": "—Ç—Ä–∞–≤–º–ø—É–Ω–∫—Ç",
            "üå≥ –ü–∞—Ä–∫–∏": "–ø–∞—Ä–∫",
            "üé≠ –¢–µ–∞—Ç—Ä—ã": "—Ç–µ–∞—Ç—Ä",
            "üõçÔ∏è –¢–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã": "—Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä"
        }[current_button_text]
        
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ {display_name}:", reply_markup=markup)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–∑–∞–¥
        save_user_state(message.chat.id, {'menu': 'category_places', 'prev_menu': 'map_options', 'category': category_key})

    @bot.message_handler(func=lambda message: message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    def handle_contacts(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        –í–∫–ª—é—á–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            contacts_text = (
                "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n"
                "üåê <b>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:</b>\n"
                "‚Ä¢ <a href=\"https://city-yaroslavl.ru\">city-yaroslavl.ru</a>\n\n"
                " <b>–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>\n"
                "‚Ä¢ <a href=\"https://vk.com/cityyaroslavl\">–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>\n"
                "‚Ä¢ <a href=\"https://t.me/cityyaroslavl\">Telegram</a>\n"
                "‚Ä¢ <a href=\"https://ok.ru/cityyaroslavl\">–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏</a>\n\n"
                "üìß <b>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞:</b>\n"
                "‚Ä¢ info@city-yaroslavl.ru\n\n"
                "üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b>\n"
                "‚Ä¢ +7 (4852) 40-40-40\n\n"
                "üè¢ <b>–ê–¥—Ä–µ—Å:</b>\n"
                "‚Ä¢ –≥. –Ø—Ä–æ—Å–ª–∞–≤–ª—å, —É–ª. –°–≤–æ–±–æ–¥—ã, 2"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            bot.send_message(
                message.chat.id,
                contacts_text,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(func=lambda message: message.text == "üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ")
    def handle_location(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –±–æ—Ç–∞
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç—É —Å –æ—Ç–º–µ—Ç–∫–æ–π –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        """
        try:
            # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –Ø—Ä–æ—Å–ª–∞–≤–ª—è
            latitude = 57.6261
            longitude = 39.893813

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ–π
            bot.send_location(
                message.chat.id,
                latitude,
                longitude,
                reply_markup=create_main_keyboard()
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            bot.send_message(
                message.chat.id,
                " <b>–¶–µ–Ω—Ç—Ä –Ø—Ä–æ—Å–ª–∞–≤–ª—è</b>\n\n"
                "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ —Å–∞–º–æ–º —Å–µ—Ä–¥—Ü–µ –≥–æ—Ä–æ–¥–∞, –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏ –≥–ª–∞–≤–Ω—ã—Ö —É–ª–∏—Ü.\n"
                "–î–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –Ω–∞—Å –º–æ–∂–Ω–æ:\n"
                "‚Ä¢ –ù–∞ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ\n"
                "‚Ä¢ –ù–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ\n"
                "‚Ä¢ –ü–µ—à–∫–æ–º –æ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ø–ª–æ—â–∞–¥–∏",
                parse_mode='HTML'
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(func=lambda message: message.text == "üÜò –ü–æ–º–æ—â—å")
    def handle_help(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        –í–∫–ª—é—á–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        """
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π
            with open('Materials/helpPhoto.jpg', 'rb') as photo:
                bot.send_photo(
                    message.chat.id,
                    photo,
                    caption=HELP_TEXT,
                    parse_mode='HTML',
                    reply_markup=create_main_keyboard()
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–ø—Ä–∞–≤–∫–∏: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø—Ä–∞–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(func=lambda message: message.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
    def show_news_categories(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        """
        logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –≤—ã–±—Ä–∞–ª '–ù–æ–≤–æ—Å—Ç–∏'")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row(
            types.KeyboardButton("üè¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"),
            types.KeyboardButton("üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç")
        )
        markup.add(types.KeyboardButton("üõ†Ô∏è –†–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"))
        markup.row(
            types.KeyboardButton("üìã –ü–æ–ª–∏—Ç–∏–∫–∞"),
            types.KeyboardButton("üå§ –ü–æ–≥–æ–¥–∞")
        )
        markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π:",
            reply_markup=markup
        )
        save_user_state(message.chat.id, {'state': 'news_categories'})
        logger.debug(f"–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}")

    @bot.message_handler(func=lambda message: message.text == "üå§ –ü–æ–≥–æ–¥–∞")
    def handle_weather(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–≥–æ–¥—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ
        """
        logger.debug(f"handle_weather –≤—ã–∑–≤–∞–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ–º: '{message.text}'")
        try:
            weather_keyboard = create_weather_keyboard()
            bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –æ –ø–æ–≥–æ–¥–µ:",
                reply_markup=weather_keyboard
            )
            save_user_state(message.chat.id, {'state': 'weather_menu'})
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_weather: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é –ø–æ–≥–æ–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )

    @bot.message_handler(func=lambda message: message.text in ["üè¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è", "üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "üõ†Ô∏è –†–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", "üìã –ü–æ–ª–∏—Ç–∏–∫–∞"])
    def show_news(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
        """
        logger.debug(f"show_news –≤—ã–∑–≤–∞–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ–º: '{message.text}'")
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏
        category_name = message.text.split(" ", 1)[1] if " " in message.text else message.text
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∫–ª—é—á –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
        category_key = CATEGORY_MAPPING.get(category_name)

        if not category_key:
            bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
            return

        try:
            # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            news_items = get_yarnews_articles(category_key)
            
            if news_items:
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                proper_category_by = CATEGORY_NAMES.get(category_name, {}).get('by', category_name.lower())
                bot.send_message(message.chat.id, f"üóûÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ {proper_category_by}:", parse_mode='HTML')

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                for news in news_items:
                    message_text = (
                        f"<b>{news['title']}</b>\n\n"
                        f"{news['description']}\n\n"
                        f"–ò—Å—Ç–æ—á–Ω–∏–∫: <a href=\"{news['link']}\">YarNews</a>"
                    )
                    bot.send_message(
                        message.chat.id,
                        message_text,
                        parse_mode='HTML',
                        disable_web_page_preview=False
                    )

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é
                keyboard = types.InlineKeyboardMarkup()
                weekly_news_button = types.InlineKeyboardButton("–ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"news_week_{category_name}")
                keyboard.add(weekly_news_button)
                question_message = bot.send_message(
                    chat_id=message.chat.id,
                    text="üëÄ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é?",
                    reply_markup=keyboard
                )
                last_question_message_ids[message.chat.id] = question_message.message_id

            else:
                # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç
                message_text = (
                    f"üòî –ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {CATEGORY_NAMES[category_name]['default']}.\n\n"
                    f"üëÄ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é?"
                )
                keyboard = types.InlineKeyboardMarkup()
                weekly_news_button = types.InlineKeyboardButton("–ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"news_week_{category_name}")
                keyboard.add(weekly_news_button)
                question_message = bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
                last_question_message_ids[message.chat.id] = question_message.message_id

        except Exception as e:
            proper_category = CATEGORY_NAMES.get(category_name, {}).get("by", "—ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ show_news: {e}")
            bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π {proper_category}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    @bot.message_handler(func=lambda message: message.text == "üìÖ –°–æ–±—ã—Ç–∏—è")
    def show_event_categories(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Å–æ–±—ã—Ç–∏–π
        –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        """
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Å–æ–±—ã—Ç–∏–π
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row(
            types.KeyboardButton("üé≠ –ö—É–ª—å—Ç—É—Ä–∞"),
            types.KeyboardButton("‚öΩ –°–ø–æ—Ä—Ç")
        )
        markup.row(
            types.KeyboardButton("üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"),
            types.KeyboardButton("üé™ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
        )
        markup.row(
            types.KeyboardButton("üñºÔ∏è –í—ã—Å—Ç–∞–≤–∫–∏"),
            types.KeyboardButton("üéµ –ö–æ–Ω—Ü–µ—Ä—Ç—ã")
        )
        markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–æ–±—ã—Ç–∏–π:",
            reply_markup=markup
        )
        save_user_state(message.chat.id, {'state': 'event_categories'})

    @bot.message_handler(func=lambda message: message.text in ["üé≠ –ö—É–ª—å—Ç—É—Ä–∞", "‚öΩ –°–ø–æ—Ä—Ç", "üìö –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "üé™ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "üñºÔ∏è –í—ã—Å—Ç–∞–≤–∫–∏", "üéµ –ö–æ–Ω—Ü–µ—Ä—Ç—ã"])
    def show_events(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é
        """
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑ —ç–º–æ–¥–∑–∏
            category_name = message.text.split(" ", 1)[1]
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –∫–ª—é—á –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö
            category_key = EVENT_CATEGORY_MAPPING.get(category_name)
            
            if not category_key:
                bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–±—ã—Ç–∏–π.")
                return

            # –ü–æ–ª—É—á–∞–µ–º –¥–æ 3 –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è
            recent_events = get_events_by_category(category_key, limit_days=2)[:3]

            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            proper_category_by = EVENT_CATEGORY_NAMES[category_name]["by"]
            proper_category_default = EVENT_CATEGORY_NAMES[category_name]["default"]

            if recent_events:
                bot.send_message(message.chat.id, f"üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è {proper_category_by}:", parse_mode='HTML')

                for event in recent_events:
                    message_text = format_event_message(event)
                    bot.send_message(message.chat.id, message_text, parse_mode="HTML", disable_web_page_preview=False)

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–±—ã—Ç–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é
                keyboard = types.InlineKeyboardMarkup()
                weekly_events_button = types.InlineKeyboardButton("–°–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"event_week_{category_name}")
                keyboard.add(weekly_events_button)

                question_message = bot.send_message(
                    message.chat.id,
                    f"üëÄ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é?",
                    reply_markup=keyboard
                )
                last_question_message_ids[message.chat.id] = question_message.message_id

            else:
                # –ï—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç
                message_text = (
                    f"üòî –ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {proper_category_default}.\n\n"
                    f"üëÄ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é?"
                )
                keyboard = types.InlineKeyboardMarkup()
                weekly_events_button = types.InlineKeyboardButton("–°–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é", callback_data=f"event_week_{category_name}")
                keyboard.add(weekly_events_button)
                question_message = bot.send_message(message.chat.id, message_text, reply_markup=keyboard, parse_mode='HTML')
                last_question_message_ids[message.chat.id] = question_message.message_id

        except Exception as e:
            proper_category = EVENT_CATEGORY_NAMES.get(category_name, {}).get("by", "—ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")
            logger.error(f"–û—à–∏–±–∫–∞ –≤ show_events: {e}")
            bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π {proper_category}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    @bot.message_handler(func=lambda message: message.text == "üèõÔ∏è –û –≥–æ—Ä–æ–¥–µ")
    def handle_about_city(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –≥–æ—Ä–æ–¥–µ" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ø—Ä–æ—Å–ª–∞–≤–ª–µ
        """
        try:
            about_city_text = (
                "–Ø—Ä–æ—Å–ª–∞–≤–ª—å ‚Äî –∂–µ–º—á—É–∂–∏–Ω–∞ –ó–æ–ª–æ—Ç–æ–≥–æ –∫–æ–ª—å—Ü–∞ –†–æ—Å—Å–∏–∏\n"
                "üèõ –û—Å–Ω–æ–≤–∞–Ω –≤ 1010 –≥–æ–¥—É –∫–Ω—è–∑–µ–º –Ø—Ä–æ—Å–ª–∞–≤–æ–º –ú—É–¥—Ä—ã–º\n"
                "UNESCO –í—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –í—Å–µ–º–∏—Ä–Ω–æ–≥–æ –Ω–∞—Å–ª–µ–¥–∏—è –Æ–ù–ï–°–ö–û\n"
                "üåä –ì–æ—Ä–æ–¥ –Ω–∞ –í–æ–ª–≥–µ —Å —Ç—ã—Å—è—á–µ–ª–µ—Ç–Ω–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π\n"
                "üë• –ù–∞—Å–µ–ª–µ–Ω–∏–µ: –±–æ–ª–µ–µ 600 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫\n\n"
                "üèÜ –ö—É–ª—å—Ç—É—Ä–Ω–∞—è —Å—Ç–æ–ª–∏—Ü–∞ –ü–æ–≤–æ–ª–∂—å—è:\n"
                "‚Ä¢ –ü–µ—Ä–≤—ã–π —Ä—É—Å—Å–∫–∏–π —Ç–µ–∞—Ç—Ä\n"
                "‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ö—Ä–∞–º—ã –∏ –º–æ–Ω–∞—Å—Ç—ã—Ä–∏\n"
                "‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª–∏ –∏ –≤—ã—Å—Ç–∞–≤–∫–∏\n\n"
                "üèÖ –ì–æ—Ä–æ–¥ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:\n"
                "‚Ä¢ –í–µ–¥—É—â–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—ã –∏ –Ω–∞—É—á–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã\n"
                "‚Ä¢ –†–∞–∑–≤–∏—Ç–∞—è –º–µ–¥–∏—Ü–∏–Ω–∞ –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n"
                "‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏\n\n"
                "üå≥ –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –≥–æ—Ä–æ–¥:\n"
                "‚Ä¢ –ó–µ–ª–µ–Ω—ã–µ –ø–∞—Ä–∫–∏ –∏ –Ω–∞–±–µ—Ä–µ–∂–Ω—ã–µ\n"
                "‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–π–æ–Ω—ã\n"
                "‚Ä¢ –ë–æ–≥–∞—Ç–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞\n\n"
                "‚ú® –Ø—Ä–æ—Å–ª–∞–≤–ª—å ‚Äî –≥–¥–µ –∏—Å—Ç–æ—Ä–∏—è –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å—é! ‚ú®"
            )
            logger.debug(f"about_city_text length: {len(about_city_text)}")

            photo_path = "Materials/yaroslavl.jpg"
            with open(photo_path, "rb") as photo:
                bot.send_photo(
                    message.chat.id,
                    photo,
                    caption=about_city_text,
                    parse_mode='HTML'
                )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ç–µ–º—ã –∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            theme_message_text = "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:"
            about_keyboard = get_about_keyboard()
            logger.debug(f"theme_message_text: '{theme_message_text}' (length: {len(theme_message_text)})")
            logger.debug(f"about_keyboard: {about_keyboard}")

            bot.send_message(
                message.chat.id,
                theme_message_text,
                reply_markup=about_keyboard
            )
            save_user_state(message.chat.id, {'state': 'about_city_menu'})
            logger.info(f"User {message.chat.id} state saved as 'about_city_menu'.")
            
        except Exception as e:
            logger.error(f"Error in handle_about_city: {e}")
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–æ—Ä–æ–¥–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=create_main_keyboard()
            )
            logger.error(f"Sent error message to user {message.chat.id}.")

    @bot.callback_query_handler(func=lambda call: call.data.startswith(('news_week_', 'event_week_')))
    def handle_week_button(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–æ–≤–æ—Å—Ç–∏/–°–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é'
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        """
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞ –∫–Ω–æ–ø–∫–µ
            bot.answer_callback_query(call.id)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø (–Ω–æ–≤–æ—Å—Ç–∏/—Å–æ–±—ã—Ç–∏—è) –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ callback_data
            action_type, _, category_name = call.data.split('_')
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º
            try:
                if call.message.chat.id in last_question_message_ids:
                    bot.delete_message(
                        chat_id=call.message.chat.id,
                        message_id=last_question_message_ids[call.message.chat.id]
                    )
                    del last_question_message_ids[call.message.chat.id]
            except Exception as e:
                logger.debug(f"Error deleting question message: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
            loading_message = bot.send_message(
                call.message.chat.id,
                f"‚è≥ {'–ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤–æ—Å—Ç–∏' if action_type == 'news' else '–ó–∞–≥—Ä—É–∂–∞—é —Å–æ–±—ã—Ç–∏—è'}   ",
                reply_markup=None
            )
            message_id_to_delete = loading_message.message_id

            # –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
            dots_animation_frames = ["", ".", "..", "..."]
            # 4 —Ü–∏–∫–ª–∞ * 4 –∫–∞–¥—Ä–∞ * 0.3 —Å–µ–∫ = 4.8 —Å–µ–∫—É–Ω–¥
            for _ in range(4):
                for frame in dots_animation_frames:
                    current_loading_text = f"‚è≥ {'–ó–∞–≥—Ä—É–∂–∞—é –Ω–æ–≤–æ—Å—Ç–∏' if action_type == 'news' else '–ó–∞–≥—Ä—É–∂–∞—é —Å–æ–±—ã—Ç–∏—è'}{frame}"
                    try:
                        bot.edit_message_text(
                            current_loading_text,
                            chat_id=call.message.chat.id,
                            message_id=message_id_to_delete,
                            reply_markup=None
                        )
                    except telebot.apihelper.ApiTelegramException as e:
                        if "message is not modified" in str(e):
                            logger.debug(f"Message not modified: {e}")
                        else:
                            raise e
                    time.sleep(0.3)

            if action_type == 'news':
                # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                mapped_category_name = CATEGORY_MAPPING.get(category_name)
                if not mapped_category_name:
                    logger.error(f"[HANDLER] Failed to map news category: {category_name}. Using original name.")
                    mapped_category_name = category_name

                logger.info(f"[HANDLER] Fetching news for week. Original category: {category_name}, Mapped category: {mapped_category_name}")
                news_items = get_news_by_week(mapped_category_name)
                
                if news_items:
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
                    bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_to_delete)
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    bot.send_message(
                        call.message.chat.id,
                        f"üìë –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ {CATEGORY_NAMES[category_name]['by']} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:",
                        parse_mode='HTML'
                    )
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                    for news in news_items:
                        message_text = (
                            f"<b>{news['title']}</b>\n\n"
                            f"{news['description']}\n\n"
                            f"–ò—Å—Ç–æ—á–Ω–∏–∫: <a href=\"{news['link']}\">YarNews</a>"
                        )
                        bot.send_message(
                            call.message.chat.id,
                            message_text,
                            parse_mode='HTML',
                            disable_web_page_preview=False
                        )
                else:
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                    bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_to_delete)
                    bot.send_message(
                        call.message.chat.id,
                        f"üòî –ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {CATEGORY_NAMES[category_name]['default']} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é"
                    )
                # –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                show_news_categories(call.message)
                
            elif action_type == 'event':
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                mapped_category_name = EVENT_CATEGORY_MAPPING.get(category_name)
                if not mapped_category_name:
                    logger.error(f"[HANDLER] Failed to map event category: {category_name}. Using original name.")
                    mapped_category_name = category_name

                logger.info(f"[HANDLER] Fetching events for week. Original category: {category_name}, Mapped category: {mapped_category_name}")
                events = get_events_by_category(mapped_category_name, week_range=True)
                
                if events:
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
                    bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_to_delete)
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    bot.send_message(
                        call.message.chat.id,
                        f"üìÖ –°–æ–±—ã—Ç–∏—è {EVENT_CATEGORY_NAMES[category_name]['by']} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:",
                        parse_mode='HTML'
                    )
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–±—ã—Ç–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                    for event in events:
                        message_text = format_event_message(event)
                        bot.send_message(
                            call.message.chat.id,
                            message_text,
                            parse_mode='HTML',
                            disable_web_page_preview=False
                        )
                else:
                    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                    bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_to_delete)
                    bot.send_message(
                        call.message.chat.id,
                        f"üòî –ù–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {EVENT_CATEGORY_NAMES[category_name]['default']} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é"
                    )
                # –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                show_event_categories(call.message)
            
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞ –∫–Ω–æ–ø–∫–µ
            bot.answer_callback_query(call.id)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_week_button: {e}")
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, —Ç–∞–∫–∂–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
            if 'message_id_to_delete' in locals():
                try:
                    bot.delete_message(chat_id=call.message.chat.id, message_id=message_id_to_delete)
                except Exception as delete_error:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_week_button: {delete_error}")
            bot.answer_callback_query(
                call.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(
                call.message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            # –ü–æ—Å–ª–µ –æ—à–∏–±–∫–∏ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
            if action_type == 'news':
                show_news_categories(call.message)
            elif action_type == 'event':
                show_event_categories(call.message)

    @bot.callback_query_handler(func=lambda call: call.data in ["show_weather", "weather_news"])
    def handle_weather_callback(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–≥–æ–¥–æ–π (–ø—Ä–æ–≥–Ω–æ–∑ –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏ –æ –ø–æ–≥–æ–¥–µ)
        """
        try:
            # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback-–∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ
            bot.answer_callback_query(call.id)

            # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            try:
                bot.delete_message(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id
                )
            except Exception as e:
                logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ: {e}")

            if call.data == "show_weather":
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
                weather_data = get_openmeteo_weather()
                if weather_data:
                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
                    weather_description = get_weather_description(weather_data['current']['weathercode'])
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
                    weather_message = format_weather_message(weather_data)
                    
                    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    markup.row(
                        types.KeyboardButton("üè¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è"),
                        types.KeyboardButton("üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç")
                    )
                    markup.add(types.KeyboardButton("üõ†Ô∏è –†–µ–º–æ–Ω—Ç –∏ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"))
                    markup.row(
                        types.KeyboardButton("üìã –ü–æ–ª–∏—Ç–∏–∫–∞"),
                    )
                    markup.add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ GIF-–∞–Ω–∏–º–∞—Ü–∏–∏
                    weather_code = weather_data['current']['weathercode']
                    gif_path = f"materials/weather/{weather_code}.gif"
                    
                    try:
                        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å GIF-–∞–Ω–∏–º–∞—Ü–∏—é —Å –ø–æ–¥–ø–∏—Å—å—é –æ –ø–æ–≥–æ–¥–µ
                        with open(gif_path, 'rb') as gif:
                            bot.send_animation(
                                chat_id=call.message.chat.id,
                                animation=gif,
                                caption=weather_message,
                                reply_markup=markup
                            )
                    except FileNotFoundError:
                        # –ï—Å–ª–∏ GIF –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(
                            chat_id=call.message.chat.id,
                            text=weather_message,
                            reply_markup=markup
                        )
                    
                    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
                    hourly_chart_image = generate_hourly_temperature_graph_image(weather_data['hourly'])
                    if hourly_chart_image:
                        bot.send_photo(
                            call.message.chat.id,
                            hourly_chart_image,
                            caption="üìä –ì—Ä–∞—Ñ–∏–∫ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:"
                        )

                else:
                    # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
                    bot.send_message(
                        call.message.chat.id,
                        "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã üòî",
                        reply_markup=types.ReplyKeyboardMarkup(resize_keyboard=True).add(types.KeyboardButton("üîô –ù–∞–∑–∞–¥"))
                    )
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π
                show_news_categories(call.message)
            
            elif call.data == "weather_news":
                # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –æ –ø–æ–≥–æ–¥–µ
                weather_news = get_yarnews_articles("weather", limit_days=2) 
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ü–æ–≥–æ–¥–∞"
                proper_category_by = CATEGORY_NAMES.get("–ü–æ–≥–æ–¥–∞", {}).get('by', "–ø–æ–≥–æ–¥–µ")

                if weather_news:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π –æ –ø–æ–≥–æ–¥–µ
                    bot.send_message(
                        chat_id=call.message.chat.id,
                        text=f"üóûÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ {proper_category_by}:", 
                        parse_mode='HTML'
                    )
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                    for news in weather_news:
                        message_text = (
                            f"<b>{news['title']}</b>\n\n"
                            f"{news['description']}\n\n"
                            f"–ò—Å—Ç–æ—á–Ω–∏–∫: <a href=\"{news['link']}\">YarNews</a>"
                        )
                        bot.send_message(
                            call.message.chat.id,
                            message_text,
                            parse_mode='HTML',
                            disable_web_page_preview=False
                        )

                else:
                    # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –æ –ø–æ–≥–æ–¥–µ
                    message_text_no_news = (
                        f"üòî –ü–æ–∫–∞ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {CATEGORY_NAMES["–ü–æ–≥–æ–¥–∞"]['default']}.\n\n"
                    )
                    bot.send_message(
                        chat_id=call.message.chat.id,
                        text=message_text_no_news,
                        parse_mode='HTML'
                    )
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–¥–µ–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –æ –ø–æ–≥–æ–¥–µ
                keyboard = types.InlineKeyboardMarkup()
                weekly_news_button = types.InlineKeyboardButton(
                    "–ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é",
                    callback_data="news_week_–ü–æ–≥–æ–¥–∞"
                )
                keyboard.add(weekly_news_button)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
                question_message = bot.send_message(
                    chat_id=call.message.chat.id,
                    text="üëÄ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é?", 
                    reply_markup=keyboard
                )
                last_question_message_ids[call.message.chat.id] = question_message.message_id

                # –£–±–∏—Ä–∞–µ–º –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π
                # show_news_categories(call.message)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ callback-–∫–Ω–æ–ø–æ–∫ –ø–æ–≥–æ–¥—ã: {e}")
            bot.send_message(
                call.message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    @bot.callback_query_handler(func=lambda call: call.data.startswith("history_"))
    def handle_history_topic(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –∏—Å—Ç–æ—Ä–∏–∏
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–±–µ, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –∏–ª–∏ –Ø—Ä–æ—Å–ª–∞–≤–µ –ú—É–¥—Ä–æ–º
        """
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á —Ç–µ–º—ã –∏–∑ callback_data
        topic_key = call.data.split('_', 1)[1]
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ –∫–ª—é—á—É
        history_text = HISTORY_TOPICS.get(topic_key, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(call.message.chat.id, history_text, parse_mode='HTML')
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç–µ–º–∞ –∏—Å—Ç–æ—Ä–∏–∏ {topic_key} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {call.message.chat.id}.")
        bot.answer_callback_query(call.id)

    @bot.callback_query_handler(func=lambda call: call.data == "back_to_about")
    def handle_back_to_about(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∫ –º–µ–Ω—é "–û –≥–æ—Ä–æ–¥–µ"
        """
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None) 
        handle_about_city(call.message)
        bot.answer_callback_query(call.id)

    @bot.message_handler(func=lambda message: message.text == "üìú –ò—Å—Ç–æ—Ä–∏—è –Ø—Ä–æ—Å–ª–∞–≤–ª—è")
    def handle_history_button(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è –Ø—Ä–æ—Å–ª–∞–≤–ª—è"
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç–µ–º—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –≥–æ—Ä–æ–¥–∞
        """
        try:
            logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –≤—ã–±—Ä–∞–ª '–ò—Å—Ç–æ—Ä–∏—è –Ø—Ä–æ—Å–ª–∞–≤–ª—è' –∏–∑ ReplyKeyboardMarkup.")
            history_keyboard = create_history_keyboard()
            bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏—Å—Ç–æ—Ä–∏–∏:",
                reply_markup=history_keyboard
            )
            save_user_state(message.chat.id, {'state': 'history_menu', 'prev_menu': 'about_city_menu'})
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_history_button (message_handler): {e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    @bot.message_handler(func=lambda message: message.text in ["üêª –ì–µ—Ä–±", "üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π"])
    def handle_history_message(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ —Ç–µ–º –∏—Å—Ç–æ—Ä–∏–∏
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º–µ
        """
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Å –∫–ª—é—á–æ–º —Ç–µ–º—ã
        history_topic_mapping = {
            "üêª –ì–µ—Ä–±": "gerb",
            "üèõ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞": "architecture",
            "üëë –Ø—Ä–æ—Å–ª–∞–≤ –ú—É–¥—Ä—ã–π": "yaroslav"
        }
        topic_key = history_topic_mapping.get(message.text)

        if topic_key and topic_key in HISTORY_TOPICS:
            history_text = HISTORY_TOPICS.get(topic_key)["text"]
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
            photo_paths = {
                "gerb": "Materials/history_city/gerb.jpg",
                "architecture": "Materials/history_city/architecture.jpg",
                "yaroslav": "Materials/history_city/yaroslav.jpg"
            }
            photo_path = photo_paths.get(topic_key)
            if photo_path:
                # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥–ø–∏—Å–∏
                with open(photo_path, "rb") as photo:
                    bot.send_photo(message.chat.id, photo, caption=history_text, parse_mode='HTML')
            else:
                # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
                bot.send_message(message.chat.id, history_text, parse_mode='HTML')
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ç–µ–º–∞ –∏—Å—Ç–æ—Ä–∏–∏ {topic_key} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.chat.id}.")
            
            # –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ, —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –∏—Å—Ç–æ—Ä–∏–∏
            history_keyboard = create_history_keyboard()
            bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏—Å—Ç–æ—Ä–∏–∏:",
                reply_markup=history_keyboard
            )
            save_user_state(message.chat.id, {'state': 'history_menu', 'prev_menu': 'about_city_menu'})
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
            logger.warning(f"–¢–µ–º–∞ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {message.text}")

    @bot.message_handler(func=lambda message: any(
        message.text in LOCATIONS[cat] for cat in LOCATIONS
    ))
    def show_location_info(message):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ
        –í–∫–ª—é—á–∞–µ—Ç –∞–¥—Ä–µ—Å, —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, —Ç–µ–ª–µ—Ñ–æ–Ω, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç—É
        """
        # –°–ª–æ–≤–∞—Ä—å —ç–º–æ–¥–∑–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ—Å—Ç
        category_emojis = {
            'shopping_centers': 'üõçÔ∏è',
            'attractions': 'üèõÔ∏è',
            'parks': 'üå≥',
            'theaters': 'üé≠',
            'trauma_centers': 'üè•',
        }
        # –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_prompts = {
            'attractions': '–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä:',
            'trauma_centers': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–≤–º–ø—É–Ω–∫—Ç:',
            'parks': '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∫:',
            'theaters': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–∞—Ç—Ä:',
            'shopping_centers': '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä:'
        }
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –º–µ—Å—Ç
        for category, places in LOCATIONS.items():
            if message.text in places:
                data = places[message.text]
                emoji = category_emojis.get(category, 'üìç')
                text = f"{emoji} <b>{message.text}</b>\n"
                # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                if 'address' in data:
                    text += f"–ê–¥—Ä–µ—Å: {data['address']}\n"
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                if 'working_hours' in data:
                    text += f"–†–µ–∂–∏–º: {data['working_hours']}\n"
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                if 'phone' in data:
                    text += f"–¢–µ–ª: {data['phone']}\n"
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (–æ–ø–∏—Å–∞–Ω–∏–µ), –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                if 'description' in data:
                    text += f"\n‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
                    desc = data['description']
                    # –ï—Å–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Ä–∫–µ—Ä—ã –ø—É–Ω–∫—Ç–æ–≤ –∏–ª–∏ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ –∫–∞–∫ —Å–ø–∏—Å–æ–∫
                    if any(sep in desc for sep in ['‚Ä¢', '\n', ';']):
                        lines = [l.strip('‚Ä¢ ').strip() for l in desc.replace(';', '\n').split('\n') if l.strip()]
                    else:
                        lines = [l.strip() for l in desc.split(',') if l.strip()]
                    for line in lines:
                        text += f"‚Ä¢ {line}\n"
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
                if 'lat' in data and 'lon' in data:
                    yandex_url = f"https://yandex.ru/maps/?ll={data['lon']}%2C{data['lat']}&z=16&pt={data['lon']},{data['lat']},pm2rdm"
                    text += f"\nüó∫Ô∏è <a href=\"{yandex_url}\">–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ</a>"
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—Å—Ç–µ
                bot.send_message(message.chat.id, text, parse_mode='HTML', disable_web_page_preview=False)
                # –ü–æ—Å–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–µ –≤—ã–≤–æ–¥–∏–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-—Ç–æ –µ—â–µ –∏–∑ —Ç–æ–π –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                prompt = category_prompts.get(category, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ:")
                bot.send_message(message.chat.id, prompt)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                save_user_state(message.chat.id, {'menu': 'location_info', 'prev_menu': 'category_places', 'category': category})
                break

    @bot.callback_query_handler(func=lambda call: call.data in ["daily_news", "daily_events"])
    def handle_daily_notification_buttons(call):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏.
        –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:
        - "–ù–æ–≤–æ—Å—Ç–∏" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
        - "–°–æ–±—ã—Ç–∏—è" - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–±—ã—Ç–∏–π
        –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è —É–¥–∞–ª—è–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.
        """
        try:
            if call.data == "daily_news":
                show_news_categories(call.message)
            elif call.data == "daily_events":
                show_event_categories(call.message)
            
            # –£–¥–∞–ª—è–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–≥ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ
            bot.edit_message_reply_markup(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=None
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–æ–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            bot.answer_callback_query(
                call.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                show_alert=True
            )

    @bot.message_handler(func=lambda message: True)
    def handle_all_messages(message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        –ø—Ä–∏ –∫–∞–∂–¥–æ–º –µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –±–æ—Ç–æ–º.
        """
        try:
            update_last_active(message.chat.id)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç—ã bot –∏ logger –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö –ø—Ä–æ–µ–∫—Ç–∞
__all__ = ['bot', 'logger'] 